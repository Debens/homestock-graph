# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
    aws-ecs: circleci/aws-ecs@0.0.3
executors:
    docker:
        environment:
            IMAGE_NAME: debens/homestock-graph
        docker:
            - image: circleci/buildpack-deps:stretch
jobs:
    test:
        docker:
            - image: circleci/node:8
        steps:
            - checkout
            # Download and cache dependencies
            - restore_cache:
                  key: v1-dependencies-{{ checksum "package.json" }}
            - run: yarn install
            - save_cache:
                  key: v1-dependencies-{{ checksum "package.json" }}
                  paths:
                      - node_modules
            - run:
                  name: Test
                  # TODO: yarn test:coverage
                  command: yarn test
    build:
        executor: docker
        steps:
            - checkout
            - setup_remote_docker:
                  docker_layer_caching: true
            - run:
                  name: Build Docker image
                  command: docker build -t $IMAGE_NAME:latest .
            - run:
                  name: Archive Docker image
                  command: docker save -o image.tar $IMAGE_NAME
            - persist_to_workspace:
                  root: .
                  paths:
                      - ./image.tar
    publish-latest:
        executor: docker
        steps:
            - attach_workspace:
                  at: /tmp/workspace
            - setup_remote_docker
            - run:
                  name: Load archived Docker image
                  command: docker load -i /tmp/workspace/image.tar
            - run:
                  name: Publish Docker Image to Docker Hub
                  command: |
                      echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                      docker push $IMAGE_NAME:latest
    deploy-latest:
        docker:
            - image: 'circleci/python:3.7.1'
        steps:
            - aws-cli/install
            - aws-cli/configure:
                  aws-access-key-id: $AWS_ACCESS_KEY_ID
                  aws-region: $AWS_REGION
            - aws-ecs/update-service:
                  family: '${AWS_SERVICE_NAME}'
                  cluster-name: '${AWS_CUSTERM_NAME}'
                  container-image-name-updates: 'container=debens/homestock-graph,tag=latest'
    publish-tag:
        executor: docker
        steps:
            - attach_workspace:
                  at: /tmp/workspace
            - setup_remote_docker
            - run:
                  name: Load archived Docker image
                  command: docker load -i /tmp/workspace/image.tar
            - run:
                  name: Publish Docker Image to Docker Hub
                  command: |
                      echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                      IMAGE_TAG=${CIRCLE_TAG/v/''}
                      docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
                      docker push $IMAGE_NAME:latest
                      docker push $IMAGE_NAME:$IMAGE_TAG
workflows:
    version: 2
    default:
        jobs:
            - test
            - build:
                  requires:
                      - test
                  filters:
                      branches:
                          only: master
            - publish-latest:
                  requires:
                      - build
                  filters:
                      branches:
                          only: master
            - aws-ecs/deploy-service-update:
                  requires:
                      - publish-latest
                  family: '${AWS_SERVICE_NAME}-service'
                  cluster-name: '${AWS_CUSTERM_NAME}-cluster'
                  container-image-name-updates: 'container=${AWS_SERVICE_NAME}-service,tag=${CIRCLE_SHA1}'
    build-tags:
        jobs:
            - build:
                  filters:
                      tags:
                          only: /^v.*/
                      branches:
                          ignore: /.*/
            - publish-tag:
                  requires:
                      - build
                  filters:
                      tags:
                          only: /^v.*/
                      branches:
                          ignore: /.*/
